jQuery(function(e){"use strict";e(document).ready(function(){e("#main-slider .owl-carousel").owlCarousel({nav:!0,slideSpeed:300,paginationSpeed:400,items:1,singleItem:!0,dots:!0,autoplay:!0,autoplayTimeout:5e3,loop:!0,animateOut:"owl-fadeUp-out",animateIn:"owl-fade-in",navText:["<span class='glyphicon glyphicon-menu-left'></span>","<span class='glyphicon glyphicon-menu-right'></span>"],responsive:{0:{nav:!1},992:{nav:!0}}})}),e(document).ready(function(){var o=e("#player"),n=o.find('input[type="range"]').rangeslider({polyfill:!1,onInit:function(){},onSlide:function(e,o){},onSlideEnd:function(e,o){}});o.find(".volume-down").click(function(){console.log(123),n.val(0).change()}),o.find(".volume-up").click(function(){n.val(100).change()})}),e(document).ready(function(){e("#program").perfectScrollbar({suppressScrollX:!0,wheelSpeed:.5,wheelPropagation:!0})}),e(document).ready(function(){e("#blockquote .owl-carousel").owlCarousel({nav:!0,slideSpeed:300,paginationSpeed:400,items:1,singleItem:!0,dots:!1,autoplay:!0,autoplayTimeout:13e3,loop:!0,navText:["<span class='glyphicon glyphicon-menu-left'></span>","<span class='glyphicon glyphicon-menu-right'></span>"]})}),e(document).ready(function(){var o=e("#efir-upper .owl-carousel");o.owlCarousel({slideSpeed:300,paginationSpeed:400,items:o.find(".item").length-1,autoplay:!0,autoplayTimeout:7e3,loop:!0,responsive:{0:{items:1},650:{items:2},992:{items:3},1300:{items:4},1600:{items:5}}})}),e(document).ready(function(){e("#video .owl-carousel").owlCarousel({slideSpeed:300,paginationSpeed:400,items:1,singleItem:!0,dots:!0,loop:!0})}),e(document).ready(function(){var o=e("#efir-lower .owl-carousel");o.owlCarousel({slideSpeed:300,paginationSpeed:400,items:o.find(".item").length-1,autoplay:!0,autoplayTimeout:9e3,loop:!0,responsive:{0:{items:1},650:{items:2},992:{items:3},1300:{items:4},1600:{items:5}}})}),e(document).ready(function(){var o="script.php";e("#sendmail").click(function(){var n=e("#support form");e.post(o,{data:n.serializeArray()}).done(function(e){e=JSON.parse(e);var o=n.find(".deliverstatus");o.text(e.text).show(),"success"!=e.status&&o.addClass("error"),setTimeout(function(){o.removeClass("error").hide()},1e4)})})})});
//# sourceMappingURL=data:application/json;base64,
